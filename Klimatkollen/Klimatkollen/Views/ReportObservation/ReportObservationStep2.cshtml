@model Klimatkollen.ViewModels.ObservationViewModel
@{
    ViewData["Title"] = "Rapportera observation";
}
<br />
<h1>Steg 2 - Välj underkategori @*för @Model.mainCategory.CategoryName*@</h1>

<div id="catDiv">
    @foreach (var item in ViewBag.newList)
    {
        if (item.Type != null && item.Type != "")
        {
            <button class="buttonTemp" onclick="SetValue(this)" value=@item.Id>@item.Type</button>
        }
    }
</div>

@using (Html.BeginForm("ReportObservationStep3", "ReportObservation", FormMethod.Post, new { @class = "form-horizontal", role = "form", @id = "myForm" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="form-group">
        <br />
        <div class="col-md-8">
            <a class="btn btn-sec" href="javascript:void(0);" onclick="history.go(-1);"> <i class="fas fa-angle-left"></i> Tillbaka</a>
        </div>

        <div class="col-md-10" style="visibility: hidden">
            @Html.EditorFor(model => model.category.Id, new { htmlAttributes = new { @class = "form-control btnResult", @id = "resultBoxId" } })
        </div>

        <div>
            @Html.HiddenFor(model => model.mainCategory.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div>
            @Html.HiddenFor(model => model.mainCategory.Id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.measurement.categoryId, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <hr />
    </div>
}


<script>
    //Sätter värdet på den klickade knappen till en textbox för objektets "category"
    function SetValue(y) {
        var q = document.getElementById("resultBoxId");
        q.value = y.value;
        Submitform();
    }
    //Submittar formuläret
    function Submitform() {
        document.forms["myForm"].submit();
    }
</script>
