@model Klimatkollen.Models.Observation

@{
    ViewBag.Title = "Ändra observation";
}

<h1>Ändra observation</h1>
<hr />

<div id="editForm">
    <form method="post">
        @Html.AntiForgeryToken()

        <input id="long" type="hidden" value="@Model.Longitude" asp-for="@Model.Longitude" />
        <input id="lat" type="hidden" value="@Model.Latitude" asp-for="@Model.Latitude" />
        <input type="hidden" asp-for="@Model.Person" value="@Model.Person" />



        <h3 style="text-align:center">Observation av @*@Model.MainCategory.CategoryName,*@ @*@Model.Measurement.ThirdCategory.Type*@ </h3>
        <br />
        <div class="form-group row">
            <label class="col-form-label col-sm-2">@*@Model.Measurement.ThirdCategory.Unit*@ Värde:</label>
            <div class="col-sm-10">
                @*<input asp-for="@Model.Measurement.Value" class="form-control" value="@Model.Measurement.Value" />*@
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-2">Kommentar:</label>
            <div class="col-sm-10">
                @*<input class="form-control" required type="text" asp-for="@Model.Comment" value="@Model.Comment" />*@
                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control CommentTextBox", @id = "observation_Comment"} })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-form-label col-sm-2">Datum:</label>
            
            <div class="col-sm-10">
                @*<input type="text" class="form-control" asp-for="@Model.Date" value="@Model.Date" id="datepicker" />*@
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div id="hiddens">
            <div class="col-md-10" style="visibility: hidden">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control btnResult", @id = "resultBoxId" } })
            </div>
        </div>

        <br />
        <h5 style="text-align:center">Välj plats där observation gjordes på kartan nedan</h5>
        <div id="map" style="height: 500px; width:100%; border-radius: 10px; box-shadow: 3px 7px 5px #888888"></div>
        <br />
        <input type="submit" value="Uppdatera observation" class="btn btn-primary" asp-action="PostEditUserObservation" asp-controller="Profile" />
    </form>
</div>

<script>
    $(document).ready( function() {
        $( "#datepicker" ).datepicker();
    });
</script>

<script>
    var map, marker;
    $(document).ready(function () {

        function myMap(lat, long) {
            var myCenter = new google.maps.LatLng(lat, long);
            var mapCanvas = document.getElementById("map");
            var latInput = document.getElementById("lat").value;
            var longInput = document.getElementById("long").value;
            var coords = { lat: Number(latInput), lng: Number(longInput) };

            var mapOptions = {
                center: coords,
                zoom: 12,
                streetViewControl: false,
                mapTypeControl: true,
                zoomControl: false,
                scrollwheel: true
            };

            map = new google.maps.Map(mapCanvas, mapOptions);
            //if (navigator.geolocation) {
            //    navigator.geolocation.getCurrentPosition(function (position) {
            //        latInput = document.getElementById("lat").value = position.coords.latitude;
            //        longInput = document.getElementById("long").value = position.coords.longitude;

            marker = new google.maps.Marker({
                position: { lat: Number(latInput), lng: Number(longInput) },
                map: map,
                draggable: true
            });
            marker.addListener('click', function () {
                map.setCenter(marker.getPosition());
            });
            marker.addListener('dragend', function () {
                document.getElementById("lat").value = marker.getPosition().lat();
                document.getElementById("long").value = marker.getPosition().lng();
            });

            map.setCenter(marker.getPosition());
            //    }, function () {
            //        handleLocationError(true, infoWindow, map.getCenter());
            //    });
            //} else {
            //    // Browser doesn't support Geolocation
            //    handleLocationError(false, infoWindow, map.getCenter());
            //}

            //marker = new google.maps.Marker({
            //        position: myCenter,
            //        draggable: true
            //    }
            //);
            //marker.setMap(map);
        }

        //function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        //    infoWindow.setPosition(pos);
        //    infoWindow.setContent(browserHasGeolocation ?
        //        'Error: The Geolocation service failed.' :
        //        'Error: Your browser doesn\'t support geolocation.');
        //    infoWindow.open(map);
        //}

        google.maps.event.addDomListener(window, 'load', myMap(67.85426620914679, 20.227949203380874));

        map.addListener('click', function (event) {
            marker.setPosition(event.latLng);
            document.getElementById("lat").value = marker.getPosition().lat();
            document.getElementById("long").value = marker.getPosition().lng();
        });
    });

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBagdhMKVaEPqLco2PxO2NCSTPYeU_T4gU&callback=initMap"
        async defer></script>
